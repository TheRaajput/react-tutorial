{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/ExpenseButton.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/NewExpense/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Chart/ExpensesChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","oncancelClick","ExpenseButton","onClickHandler","NewExpense","click","setclick","AddExpense","enteredExpenseData","id","Math","random","toString","onaddExpense","Card","classes","children","ExpensesFilter","selected","onFilterUpdate","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpenseList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","valueArray","dataPoints","datapoint","totalMax","dataPoint","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","FilteredYear","setFilteredYear","FilteredArray","filter","updatedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd19b09c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const DateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2021-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={DateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={()=>props.oncancelClick(false)}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst ExpenseButton = (props) => {\r\n  return <button onClick={()=>props.onClickHandler(true)}>Add New Expense</button>;\r\n};\r\n\r\nexport default ExpenseButton;\r\n","import React,{useState} from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"../NewExpense/ExpenseForm\";\r\nimport ExpenseButton from \"./ExpenseButton\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [click, setclick] = useState(false)\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onaddExpense(expenseData);\r\n  };\r\n\r\n  \r\n  let AddExpense = <ExpenseButton onClickHandler={setclick}/>\r\n  if(click===true){\r\n    AddExpense = <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} oncancelClick={setclick}/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n    {AddExpense}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react'\r\nimport './card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearSelectHandler = (event) => {\r\n    props.onFilterUpdate(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearSelectHandler}>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expense-list__fallback\">Found No expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expense-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div style={{height:barFillHeight}} className=\"chart-bar__fill\"></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    const valueArray = props.dataPoints.map(datapoint => datapoint.value);\r\n    const totalMax = Math.max(...valueArray)\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../NewExpense/ExpensesFilter\";\r\nimport ExpenseList from './ExpenseList'\r\nimport ExpensesChart from \"../Chart/ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [FilteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterUpdate = (updatedYear) => {\r\n    setFilteredYear(updatedYear);\r\n  };\r\n\r\n  const FilteredArray = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === FilteredYear\r\n  );\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={FilteredYear} onFilterUpdate={filterUpdate} />\r\n        <ExpensesChart expenses={FilteredArray}/>\r\n        <ExpenseList items={FilteredArray}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onaddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}